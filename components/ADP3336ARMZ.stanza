#use-added-syntax(jitx)
defpackage components/ADP3336ARMZ :
  import core
  import collections
  import jitx
  import jitx/commands
  import ocdb/utils/defaults
  import ocdb/utils/symbols
  import ocdb/utils/box-symbol
  import ocdb/utils/bundles
  import ocdb/utils/generator-utils
  import ocdb/utils/generic-components
  import ocdb/utils/property-structs
  import ocdb/modules/passive-circuits


pcb-pad round-rect-smd-pad :
  type = SMD
  shape = RoundedRectangle(1.625, 0.4, 0.1, loc(0.0, 0.0))
  layer(Paste(Top)) = RoundedRectangle(1.625, 0.4, 0.1, loc(0.0, 0.0))
  layer(SolderMask(Top)) = RoundedRectangle(1.625, 0.4, 0.1, loc(0.0, 0.0))

public pcb-landpattern MSOP-8_3x3mm_P065mm :
  pad p[1] : round-rect-smd-pad at loc(-2.1125, 0.975) on Top
  pad p[2] : round-rect-smd-pad at loc(-2.1125, 0.325) on Top
  pad p[3] : round-rect-smd-pad at loc(-2.1125, -0.325) on Top
  pad p[4] : round-rect-smd-pad at loc(-2.1125, -0.975) on Top
  pad p[5] : round-rect-smd-pad at loc(2.1125, -0.975) on Top
  pad p[6] : round-rect-smd-pad at loc(2.1125, -0.325) on Top
  pad p[7] : round-rect-smd-pad at loc(2.1125, 0.325) on Top
  pad p[8] : round-rect-smd-pad at loc(2.1125, 0.975) on Top

  layer(Courtyard(Top)) = Polygon([
    Point(3.18, 1.75), 
    Point(-3.18, 1.75), 
    Point(-3.18, -1.75), 
    Point(3.18, -1.75)])
  layer(Silkscreen("F-SilkS", Top)) = Text(">REF", 1.0, C, loc(0.0, 2.45))
  layer(Finish(Top)) = Text(">VALUE", 1.0, C, loc(0.0, -2.45))
  layer(Finish(Top)) = Text("${REFERENCE}", 0.75, C, loc(0.0, 0.0))
  layer(Silkscreen("F-SilkS", Top)) = Line(0.12, [Point(0.0, -1.61), Point(-1.5, -1.61)])
  layer(Silkscreen("F-SilkS", Top)) = Line(0.12, [Point(0.0, 1.61), Point(1.5, 1.61)])
  layer(Silkscreen("F-SilkS", Top)) = Line(0.12, [Point(0.0, 1.61), Point(-2.925, 1.61)])
  layer(Silkscreen("F-SilkS", Top)) = Line(0.12, [Point(0.0, -1.61), Point(1.5, -1.61)])
  layer(Finish(Top)) = Line(0.1, [Point(1.5, -1.5), Point(-1.5, -1.5)])
  layer(Finish(Top)) = Line(0.1, [Point(-0.75, 1.5), Point(1.5, 1.5)])
  layer(Finish(Top)) = Line(0.1, [Point(1.5, 1.5), Point(1.5, -1.5)])
  layer(Finish(Top)) = Line(0.1, [Point(-1.5, -1.5), Point(-1.5, 0.75)])
  layer(Finish(Top)) = Line(0.1, [Point(-1.5, 0.75), Point(-0.75, 1.5)])

public pcb-component component (voltage:Double):
  description = "ADP3336ARMZ"
  pin-properties :
    [pin:Ref | pads:Ref ... | side:Dir | electrical-type:String]
    [OUT[0] | p[1] | Right | "PowerOut"]
    [OUT[1] | p[3] p[2] | Right | "Passive"]
    [GND | p[4] | Down | "PowerIn"]
    [FB | p[5] | Right | "Passive"]
    [nSD | p[6] | Left | "Input"]
    [IN[1] | p[7] | Left | "PowerIn"]
    [IN[0] | p[8] | Left | "Passive"]

  assign-landpattern(MSOP-8_3x3mm_P065mm)
  make-box-symbol()
  property(self.OUT[0].power-supply-pin) = PowerSupplyPin(typ(voltage), 0.5)
  property(self.OUT[1].power-supply-pin) = PowerSupplyPin(typ(voltage), 0.5)
  property(self.IN[0].power-pin) = PowerPin(tol(12.0, 0.50))
  property(self.IN[1].power-pin) = PowerPin(tol(12.0, 0.50))
  property(self.rated-temperature) = min-max(-40.0, 85.0)
  property(self.power-supply-component) = true

  ; ; We notate that this component propagates  
  ; property(self.power-supply-component) = true

public pcb-module module (target-voltage: Double):
  pin OUT
  pin IN
  pin GND

  public inst U1 : components/ADP3336ARMZ/component(target-voltage)

  net (GND U1.GND)
  net (OUT U1.OUT[0] U1.OUT[1])
  net (IN U1.IN[0] U1.IN[1])
  net (U1.OUT[0] U1.nSD)

  val cin = cap-strap(IN GND ["capacitance" => 1.0e-6 "min-rated-voltage" => 40.0])
  val cout = cap-strap(OUT GND ["capacitance" => 1.0e-6 "min-rated-voltage" => 40.0])
  property(cin.operating-point) = OperatingPoint(min-max(0.0, 12.0), min-max(0.0, 10.0e-3)) ; peak-voltage, peak-current as Toleranced
  property(cout.operating-point) = OperatingPoint(min-max(0.0, 12.0), min-max(0.0, 10.0e-3)) ; peak-voltage, peak-current as Toleranced

  val rsd = res-strap(U1.nSD OUT 1.0e3)
  property(rsd.operating-point) = OperatingPoint(min-max(0.0, 12.0), min-max(0.0, 1.0e-3)) ; peak-voltage, peak-current as Toleranced

  property(IN.voltage) = tol(12.0, 5.0)

  val vd = make-voltage-divider(IN, U1.FB, GND, tol(1.178, 0.75), 5.0e-6)

  schematic-group(self) = ADP3336ARMZ/module

  